# 开发环境配置
server:
  ssl:
    key-store: keystore
    key-store-password: 123456
    key-store-type: jks
    key-store-alias: tomcat
  # 服务器的HTTP端口，默认为8080
  port: 8081
  servlet:
    # 应用的访问路径
    context-path: /ePay
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # 连接数满后的排队数，默认为100
    accept-count: 1000
    threads:
      # tomcat最大线程数，默认为200
      max: 800
      # Tomcat启动初始化的线程数，默认值10
      min-spare: 100

# 日志配置
logging:
  level:
    com.ruoyi: debug
    org.springframework: warn

# 用户配置
user:
  password:
    # 密码最大错误次数
    maxRetryCount: 5
    # 密码锁定时间（默认30分钟）
    lockTime: 30

# Spring配置
spring:
  data:
    mongodb:
      uri: mongodb://admin:mongoAdmin2019#@dev-mongodb-db1:27017/chat_record
  main:
    allow-bean-definition-overriding: true
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: i18n/messages
  # 文件上传
  servlet:
    multipart:
      enabled: true
      # 单个文件大小
      max-file-size:  10MB
      # 设置总上传的文件大小
      max-request-size:  20MB
  # 服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: false
    # 配置sharding jdbc分片规则
  shardingsphere:
    datasource:
      # 连接名称（下面要用这个名称来区分库）
      #            names: ds0,ds1
      names: ds0master
      ds0master:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.254.188:3307/qd_vue?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: root
        password: mysql2022#
        initialSize: 5      #初始化大小
        maxActive: 10       #最大值
        maxWait: 200      #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
        timeBetweenEvictionRunsMillis: 60000    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
        filters: stat,wall
        webStatFilter:
          enabled: true
          url-pattern: /*
          exclusions: /druid/*
        statViewServlet:
          enabled: true
          allow: 127.0.0.1
          url-pattern: /druid/*
          login-username: ruoyi
          login-password: 123456
    #      ds0slave:
    #        type: com.alibaba.druid.pool.DruidDataSource
    #        driverClassName: com.mysql.cj.jdbc.Driver
    #        url: jdbc:mysql://192.168.254.188:3308/qd_vue?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    #        username: root
    #        password: mysql2022#
    #        initialSize: 5      #初始化大小
    #        maxActive: 10       #最大值
    #        maxWait: 200      #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
    #        timeBetweenEvictionRunsMillis: 60000    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
    #        filters: stat,wall
    #        webStatFilter:
    #          enabled: true
    #          url-pattern: /*
    #          exclusions: /druid/*
    #        statViewServlet:
    #          enabled: true
    #          allow: 127.0.0.1
    #          url-pattern: /druid/*
    #          login-username: ruoyi
    #          login-password: 123456
    #            ds1:
    #                type: com.alibaba.druid.pool.DruidDataSource
    #                driverClassName: com.mysql.cj.jdbc.Driver
    #                url: jdbc:mysql://192.168.254.188:32306/qd_order?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    #                username: root
    #                password: mysql2022#
    #                initialSize: 5      #初始化大小
    #                maxActive: 10       #最大值
    #                maxWait: 200      #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
    #                timeBetweenEvictionRunsMillis: 60000    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
    #                filters: stat,wall,logback
    # 配置分片规则
    sharding:
      # 按表来区分
      tables:
        t_treasure:
          # 配置数据节点
          actualDataNodes: ds0master.t_treasure_${1..10}
          # 分库策略
          #                    databaseStrategy:
          #                        inline:
          #                            # 分库的规则 用notice_id这个字段来分库 总共有两个库 及ds0（t_treasure0）与ds1（t_treasure1）
          #                            shardingColumn: notice_id
          #                            algorithmExpression: ds${notice_id % 2}
          # 分表策略
          tableStrategy:
            inline:
              shardingColumn: uid
              algorithmExpression: t_treasure_${uid % 10 + 1}
        #                    keyGenerator:
        #                        column: notice_id
        #                        type: SNOWFLAKE
        #                        props:
        #                            worker:
        #                                id: 123
        #配置绑定表和广播表
        #绑定表——联表查询防止出现笛卡尔积现象  指需要分片规则一致的表

        t_amount_record:
          # 配置数据节点
          actualDataNodes: ds0master.t_amount_record_${1..10}
          tableStrategy:
            inline:
              shardingColumn: mid
              algorithmExpression: t_amount_record_${mid % 10 + 1}
        t_user_order:
          # 配置数据节点
          actualDataNodes: ds0master.t_user_order_${1..5}
          tableStrategy:
            inline:
              shardingColumn: user_id
              algorithmExpression: t_user_order_${user_id % 5 + 1}
        t_user_order_detail:
          # 配置数据节点
          actualDataNodes: ds0master.t_user_order_detail_${1..10}
          tableStrategy:
            inline:
              shardingColumn: buyer_id
              algorithmExpression: t_user_order_detail_${buyer_id % 10 + 1}
      bindingTables:
        t_treasure,t_amount_record,t_user_order,t_user_order_detail
      #有一些表是没有分片的必要的，这种表在每一个节点上都是一样的，这种表叫做广播表
      #            broadcastTables:
      #                t_config
      #            defaultDataSourceName: ds0master
    #      master-slave-rules:
    #        ds0:
    #          master-data-source-name: ds0master
    #          slave-data-source-names: ds0slave
    props:
      sql:
    show: true
  # redis 配置
  redis:
    # 地址
    host: 192.168.254.188
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 5
    # 密码
    password: sky2018#
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 8
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms

# token配置
token:
  # 令牌自定义标识
  header: Authorization
  # 令牌密钥
  secret: $e7d817bcc28e453ea09d98e6c3fc5783
  # 令牌有效期（默认30分钟）
  expireTime: 360
  # redis缓存key
  redisLoginKey: user_login_tokens
  maxtoken: 1

#前端加密
rsa:
  privateKey: MIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQC0URMomK7f17IGmOOKCdg2eYzPDV6Q1orAEV5XnX371YgmfCUVLp8uOQ/21tNji+O12XwwbY1q4vXsLEumBeG3HWonwFM+MzK+95NlRoHFMSkDrruGuSf3+q0TbjEu/blHIpBRhFoT6gIcqmhoSfsQx9Qd6TmYI1Bf0k8JUf9wb46nk9kBFFbgvFVMyau79WXfGYTmUAAwBaaRCMGYXE5+UECKibbb1JtgXx4nXBmj4TTpzEDpwtgKZ6ESleXrm4u6G1QTuD7dmyoT+mKLd3MN6Y24NMb4VVTcwfnc4jZvdWeQkxh1soqn+RkXCvA/0ucUclyjPSfXp0yGUx+z5re2UlLGVyQfggbOVVFQ9v0Z7EZbPAZBPA39k78cG+c3MzIty4tuyzOKh6NTnc0e3l6K6MGhSgIfjaqN2ooeadVBH9Hy1HkCnK78gxgO9WVyr56ty43o3ebgOov3UHp5K+8sKn7KkjJBf4sqqBDDDs+XwfvDywDkoxAmnxBQa+YS3Rg7ZV1yKDQyJWsy5+JnrIrJhFFtBYlTDFcBTq3VySsRhKTOK3d6XltAzuUfG6l8Iwogafnur+6fsMhclHula9gBw451Cd5kr2bMbjp/u+31tyq7qYADJsJ/9poQDo4DEMwWu75u54S9h/voxCZsGmCwOtaNRbOINwJ+qUMTpoVhTwIDAQABAoICAQCB2/muPPeEIbUGZ0lHenuKD9PGsdwu9zOJy3hkJPo8SbX58WJLdP4Srem/XUtz36Uoq+5yehNkrPtrESOR955s3/Q5mJraqsibG3W9dB+1QghFrKtFBUexoYjP+4XUT8oFXvEMpAKzYM4QkvEKWm1D0oYC3Jor5RLXT4C4N6N89/qG2UVpL5q50yijWoIhpUOufpRlwavA6fDhdqrl7WRiN62jmDZm7yDPMPFoaz3T9jbDQeRl9XrdU3B/EBE7sxPX/iJ46THtKvgM1z/tLSNhG5iC1w+MfPfW3KPz3b5SWv0w856j9OdCvXTCUZBghqUA5rOspDhzaPsFqguk5j3bDKH8d+hddnuvmrpOFTFQNDHJKf5pbkg0HlhEHBAYYqGZo64eViMYMdnBMCuEsRKpbWftg4Fi2fOSGLWZ+as3x939rglKEElWmUeR5iP8kWAaaweIxpZVPNiwS8Xer0YaUk/Jbg/aRACFhYFiaCF6aw9PBBNtwmjQbg0MnP3eSvtVAh5NdW+pUogblArmp0ASOrFcaUQJorizdZ3uA1sU07vEuHtfu4yPONek+W/J+vphAUpsm7QSDpAcSCOqNLHU/2whKM4neosaMnwyo3rIK+VYU6DTe6YOPwijF9jyeFbzwtOeul23dGTFBfOfsFI+OK1Tyl6+edHjOESFt2I8wQKCAQEA3e4ywwoEJUTrTMEqTwgn7pRQ//vlbHiaq2Oyr+u2rpk1O7p8guY8ELs7DOP9Dx6vyaOu1cfkOq8sXIXAgBaaTWK9ZWH+TEpxJmHEScuhY87M7qgK7VCS8Nrgrz4TsOBtzhS8lrNpxetijvk7huZfmbmm819eWFzkqpplnOPfMyd7eZK58I1QheBaPyPkK2kR4puifBglgQDT9FR0UI7c7v0Bry44K4Cm//DgH8AqfoHJY1nevFJHKu6og0IA7OKvV3V9GgNY1grWMyX1ol9L6NrruTb8o5q4tuIzC6bnKzxCyyexspeLQJZlJcyqAy9T8Osx7RokRYD7JkLzJMKcMQKCAQEAz/93yWd0uQ5adLeiDcocMSs8hA0d/B3A28V680QElmCai/ozccmZoqralNsA30DtW0WtkqPgrrs52jnarc2zYMVrabyTxOnZgdf1DJ1I+UyTiGSVIL7wbFyyPZ5ciSqdNR9ePHIjUzRmkzlEVKe9BQaUMcZVG7Q1K9/l1EcwBnFRuxwzWoAKq7Hz1RZ/U8A9ocF356dhS6sawgPhJObWjOin8AAZXLFXjXXj9tHQjF9QLsE5ldDiMLnT3zz+IVy8oJ319+iVO/EjbOnWASRKX4OF6DrXV89Ch5HtbrWLCZoLzANUQ5nzUSXJKR/gKUxhNW4aruyLw1XQCv3Lda/1fwKCAQEAtPPPN/AmySyUnpSxppcD2Cfek5oTyonbsvsrav1KiropCXZYp3KKbyn6T9xlLbrbohFwMKc3lBHYnegAuW+0iHyF6PAppJLeB2mX3oPGJ9cqiT1DC5Sy+ue8Y6a9725OmcWWr1nCWLpANktJGgkk0fbqBW4xQuMbH2+cgnvaNZ9vsgTMzzKqAT6Y1vqwxCR7jMVRitU1XyYJrCJgZH7X7ZUllmydJ/tSL0V7uOe6vkOcrQFN90cu9/Z4N+3NS1jZlvoY8ujfukZDuJiu26HQByDZKr+G5u70xUlSTaHcwwfzfinzXabqx9LYziU+SjKAwuNCZgz2niU4ok3capCzQQKCAQB7cWO3PVYxygn3QVDFHFE1ATMOL/a+vS3LgN1iaNjMIpM2RgyoGHy85OeK9psC5La5t5W29NmQ+f7wu+tDwVQXN7Ny8n9Em4ECJZgCn4pCoqbgiMlUwN1RgoYqOcUzhv38HBzChP7gD7Zc49zg3Rg6Vlg3Xjz+jyoLWvs8y+79s91MzgTQTjOHCLrsmUiB/RLW4Ep4Sodc8DSWNtU1IGbvA9k/f9+Nepa6lt/viUBbPuoIhZbWijzjrDXJRJqSVEaCkJz9P6TqCUf8CJ+A1/fnzdf4JovNSm1ypjGixc25qhocP1GQOVsFqwZDCO7xs6nxmuHtNOgRyukIzO0mcIKjAoIBAQCjcWCEqo45o7+2zV3486mX6cyF7zxabSpeLVPNxeq5SYBZF9AseyQ3eWLUZEBID7POsd2sdLldrOXM719VFETg4X1g1MxBRKoTJFWyqxuBtC/uIHSmwofNeVbtYydyg5zUvIOpkgOVSzpWhJVACDg9lH7zZamXFpScevdo4UxaVRy0XqcijGCAL7ZejBCd4CtcCDSe28VwyRbqZ76jqC32UOQ0tOtqHxvZUfUtP60g4nyKQEiGIyejnBzT7jQXwd8egJzpBZHEOaIsgKTA82S2wx1qFrytCWTv8d+EQ/uLzxIehO3Dr4YTGXq9TTF5G8gHgvakJPVc4yJXJ18hjo77
  charset: UTF-8

# MyBatis配置
mybatis:
  # 搜索指定包别名
  typeAliasesPackage: com.ruoyi.**.domain
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mapper/**/*Mapper.xml
  # 加载全局的配置文件
  configLocation: classpath:mybatis/mybatis-config.xml

# PageHelper分页插件
pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true
  params: count=countSql

#文件服务
minio:
  endpoint: http://192.168.254.188:9000
  accessKey: admin
  secretKey: minio***2022#
  bucketName: web-image

#rocketmq
rocketmq:
  name-server: dev-rmqnamesrv:9876
  producer:
    group: cloud-ruoyi-group #生产者分组名称
    send-message-timeout: 300000 #发送消息超时(毫秒)
    compress-message-body-threshold: 4096 #压缩消息体阈值，即大于4k的消息体将默认压缩。
    max-message-size: 4194304 #允许的最大消息大小（字节）。
    retry-times-when-send-async-failed: 0 #在异步模式下声明发送失败之前内部执行的最大重试次数
    retry-next-server: true #指示是否在内部发送故障时重试另一个nameServer。
    retry-times-when-send-failed: 2 #在同步模式下声明发送失败之前内部执行的最大重试次数。

# Swagger配置
swagger:
  # 是否开启swagger
  enabled: true
  # 请求前缀
  pathMapping: /ePay

# 防止XSS攻击
xss:
  # 过滤开关
  enabled: true
  # 排除链接（多个用逗号分隔）
  excludes: /system/notice,/system/help
  # 匹配链接
  urlPatterns: /system/*,/monitor/*,/tool/*
